
on: [push]

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    
    strategy:
      matrix:
        include:
          - architecture: amd64
            runner: ubuntu-latest
          - architecture: arm64
            runner: ubuntu-22.04-arm # Or ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker Hub
      # - name: Login to Docker Hub registry
      #   run: |
      #     echo "${{ secrets.DOCKER_PASSWORD }}" | \
      #       docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Login against a Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}



      # # Login against a Docker registry except on PR
      # # https://github.com/docker/login-action
      # - name: Log into registry ${{ env.REGISTRY }}
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Login to GitHub Docker registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # # Extract metadata (tags, labels) for Docker
      # # https://github.com/docker/metadata-action
      # - name: Extract Docker metadata
      #   id: meta
      #   uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
      #   with:
      #     # images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      #     images: ghcr.io/richie256/rtl-schedule

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/rtl-schedule


      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          dockerfile: ${{ matrix.dockerfile }}
          context: .
          platforms: linux/${{ matrix.architecture }}
          # push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


      - name: Create and publish manifest list
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        uses: ./.github/actions/docker-create-manifest
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        with:
          multiarch: '["amd64", "arm32v7", "arm64v8"]'



      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     platforms: linux/${{ matrix.architecture }}
      #     push: true
      #     tags: rtl-schedule:latest-${{ matrix.architecture }}

      # - name: Push the Docker image
      #   uses: docker/build-push-action@v4
      #   with:
      #     file: ${{ matrix.file }}
      #     push: true
      #     load: false
      #     tags: rtl-schedule:latest-${{ matrix.architecture }}
      #     # tags: ${{ steps.docker_meta.outputs.tags }}
      #     labels: ${{ steps.docker_meta.outputs.labels }}
      #     platforms: ${{ matrix.platform }}

  create-manifest:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub registry
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | \
            docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
      # - name: Build and publish image
      #   uses: ./.github/actions/docker-build-image
      #   with:
      #     dockerfile: ${{ matrix.dockerfile }}
      #     architecture: ${{ matrix.architecture }}
      - name: Create multi-arch manifest
        run: |
          docker buildx imagetools create \
            richie256/rtl-schedule:latest \
            richie256/rtl-schedule:latest-amd64 \
            richie256/rtl-schedule:latest-arm64